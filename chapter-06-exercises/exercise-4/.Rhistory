# Create a variable `hometown` that stores the city in which you were born
hometown <- milan
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Milan"
# Assign your name to the variable `my_name`
my_name <- "Paolo"
# Assign your height (in inches) to a variable `my_height`
my_height <- "182 cm"
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy-price <- "$5000"
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- "$5000"
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- "$100,000"
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- TRUE
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 0
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000 / total_cost
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- 100000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 1000 / total_cost
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 0
# Create a variable `my_name` that contains your name
my_name <- "Paolo"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
name_length
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` function)
now_doing <- paster(my_name, "is programming")
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` function)
now_doing <- paste(my_name, "is programming")
# Make the `now_doing` variable upper case
now_doing <- toupper(now_doing)
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 7
fav_2 <- 8
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 <- fav_1 / sqrt(201)
fav_2 <- fav_2 / sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
raw_sum <- sum(fav_1, fav_2)
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
round_sum <- round(raw_sum,1)
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
round_sum <- round(raw_sum)
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
round_sum <- round(raw_sum,1)
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
round_1 <- round(fav_1, 1)
round_2 <- round(fav_2, 2)
round_2 <- round(fav_2, 1)
# Create a variable `sum_round` that is the sum of the rounded values
sum_round <- sum(round_1, round_2)
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
bigger <- max(round_sum, sum_round)
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
max(round_sum, sum_round)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric)
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric,13)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
lyric_length <- nchar(lyric)
fruits <- substr(lyric,15,lyric-length)
fruits <- substr(lyric,15, lyric_length)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
gsub(fruits, "a","ee")
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub(fruits, "a","ee")
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a","ee",fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a","o",fruits)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
paste(intro,fruits_o)
y <- x * 2
x <- 3
y
201_students <- 2
intall.packages("lintr")
install.packages("lintr")
install.packages("styler")
add_three <- function(num){
result <- num + 3
return(result)
}
# Create a variable `ten` that is the result of passing 7 to your `add_three`
# function
ten <- add_three(7)
imperial_to_metric <- function(feet, inch){
result <- feet*30.48 + inch*2.54
return(result)
}
# Create a variable `height_in_meters` by passing your height in imperial to the
# `imperial_to_metric` function
height_in_meters <- imperial_to_metric(6,1)
library(styler)
library(lintr)
lintr(exercise.R)
lint(exercise.R)
lint("exercise.R")
lint("exercise.R")
setwd("~/Desktop/Info201/book-exercises/chapter-06-exercises/exercise-3")
lint("exercise.R")
style_file("exercise.R")
lint("exercise.R")
is_twice_as_long <- function(str1, str2) {
length1 <- nchar(str1)
length2 <- nchar(str2)
if(length1 > length2){
dif <- length1 - length2
if(dif >= length2){
return TRUE
} else {
return FALSE
}
} else {
dif <- length2 -length1
if(dif >= length1) {
return TRUE
} else {
return FALSE
}
}
}
is_twice_as_long <- function(str1, str2) {
length1 <- nchar(str1)
length2 <- nchar(str2)
dif <- abs(length1 - length2)
shorter <- min(length1, length2)
return(dif >= shorter)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long(1,3)
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long(dog,paolo)
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("dog", "paolo")
is_twice_as_long("dog", "student")
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(dif = 0){
return("Your strings are the same length!")
} else {
if (nchar(str1) > nchar(str2)) {
return(paste("Your first string is longer by", dif, "characters"))
} else {
return(paste("Your second string is longer by", dif, "characters"))
}
}
}
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
return("Your strings are the same length!")
} else if (nchar(str1) > nchar(str2) {
return(paste("Your first string is longer by", dif, "characters"))
} else {
return(paste("Your second string is longer by", dif, "characters"))
}
}
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
result <- ("Your strings are the same length!")
} else if (nchar(str1) > nchar(str2) {
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", dif, "characters")
}
return(result)
}
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
result <- ("Your strings are the same length!")
} else if(nchar(str1) > nchar(str2)) {
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", dif, "characters")
}
return(result)
}
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
result <- ("Your strings are the same length!")
} else if(nchar(str1) > nchar(str2)) {
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", dif, "characters")
}
return(result)
}
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
result <- ("Your strings are the same length!")
} else if(nchar(str1) > nchar(str2)) {
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", dif, "characters")
}
return(result)
}
a
describe_difference <- function(str1, str2){
dif <- abs(nchar(str1) - nchar(str2))
if(nchar(str1) = nchar(str2)){
result <- ("Your strings are the same length!")
} else if(nchar(str1) > nchar(str2)) {
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", dif, "characters")
}
return(result)
}
}
# Call your `describe_difference` function by passing it different length strings
describe_difference <- function(str1, str2){
dif = nchar(str1) - nchar(str2)
if(dif = 0){
result <- "Your strings are the same length!"
} else if(dif > 0){
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", dif,"characters")
}
return(result)
}
describe_difference <- function(str1, str2){
dif = nchar(str1) - nchar(str2)
if(dif = 0){
result <- "Your strings are the same length!"
} else if(dif > 0){
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", dif,"characters")
}
return(result)
}
result
describe_difference <- function(str1, str2){
dif = nchar(str1) - nchar(str2)
if(dif = 0){
result <- "Your strings are the same length!"
} else if(dif > 0){
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", dif,"characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if(dif = 0){
result <- "Your strings are the same length!"
} else if(dif > 0){
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", dif,"characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if(dif = 0){
result <- "Your strings are the same length!"
} else if(dif > 0){
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", dif,"characters")
}
result
}
describe_difference <- function(first, second) {
diff <- nchar(first) - nchar(second)
if (diff > 0) {
sentence <- paste("Your first string is longer by", diff, "characters")
} else if (diff < 0) {
sentence <- paste("Your second string is longer by", -diff, "characters")
} else {
sentence <- "Your strings are the same length!"
}
sentence # return the sentence
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if(dif = 0) {
result <- "Your strings are the same length!"
} else if(dif > 0) {
result <- paste("Your first string is longer by", dif,"characters")
} else {
result <- paste("Your second string is longer by", -dif,"characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif = 0) {
result <- "Your strings are the same length!"
} else if (dif > 0){
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", -dif, "characters")
}
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif = 0) {
result <- "Your strings are the same length!"
} else if (dif > 0){
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", -dif, "characters")
}
}
describe_difference <- function(str1, str2) {
diff <- nchar(str1) - nchar(str2)
if (dif > 0) {
result <- paste("Your first string is longer by", diff, "characters")
} else if (dif < 0){
result <- paste("Your first string is longer by", -diff, "characters")
} else {
result <- "Your strings are the same length!"
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif = 0) {
result <- "Your strings are the same length!"
} else if (dif > 0){
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", -dif, "characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif = 0) {
result <- "Your strings are the same length!"
} else if (dif > 0){
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", -dif, "characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif = 0) {
result <- "Your strings are the same length!"
} else if (dif > 0){
result <- paste("Your first string is longer by", dif, "characters")
} else {
result <- paste("Your second string is longer by", -dif, "characters")
}
result
}
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif > 0) {
result <- paste("Your first string is longer by", dif, "characters")
} else if (dif < 0){
result <- paste("Your first string is longer by", -dif, "characters")
} else {
result <- "Your strings are the same length!"
}
result
}
# Call your `describe_difference` function by passing it different length strings
# to confirm that it works. Make sure to check all 3 conditions1
describe_difference("dog", "cat")
describe_difference("dog", "horse")
describe_difference("dog", "horse")
describe_difference <- function(str1, str2) {
dif <- nchar(str1) - nchar(str2)
if (dif > 0) {
result <- paste("Your first string is longer by", dif, "characters")
} else if (dif < 0){
result <- paste("Your second string is longer by", -dif, "characters")
} else {
result <- "Your strings are the same length!"
}
result
}
describe_difference("dog", "horse")
describe_difference("horse","dog")
setwd("~/Desktop/Info201/book-exercises/chapter-06-exercises/exercise-4")
library(styler)
style_file("exercise.R")
library(lintr)
lint("exercise.R")
